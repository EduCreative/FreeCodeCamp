const squareList = arr => {
  // Only change code below this line
  let newArray = arr
  .filter(num => (num > 0 && Number.isInteger(num)))
  .map(num => (num*num));

  /*let newArraySqr = arr
  .filter(num => num > 0 && Number.isInteger(num))
  .map(num => parseInt(num*num));

  console.log(newArray);
  console.log(newArraySqr);*/

  /* Method 2:
  return arr
          .filter(num => num > 0 && num % parseInt(num) === 0)
          .map(num => Math.pow(num, 2));
  */
  /* Method 3:
  return arr.reduce((sqrIntegers, num) => {
    return Number.isInteger(num) && num > 0
      ? sqrIntegers.concat(num * num)
      : sqrIntegers;
  }, []);
  */
  return newArray;
  // Only change code above this line
};

const squaredIntegers = squareList([4, 5.6, -9.8, 3.14, 42, 6, 8.34, -2]);
console.log(squaredIntegers);